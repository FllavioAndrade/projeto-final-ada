name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/melhoria

jobs:
  merge-to-developer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch all branches
      run: git fetch --all
      
    - name: Checkout developer branch
      run: git checkout --track origin/developer

    - name: Merge to developer
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout developer
        git merge feature/melhorias
        git push origin developer
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-developer:
    needs: merge-to-developer
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run security tests
      run: |
        pip install bandit
        bandit -r .

    - name: Run code tests
      run: |
        pip install pytest
        pytest

    - name: Merge to homolog
      if: success()
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout homolog
        git merge developer
        git push origin homolog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-homolog:
    needs: test-developer
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run security tests
      run: |
        pip install bandit
        bandit -r .

    - name: Run code tests
      run: |
        pip install pytest
        pytest

    - name: Merge to main
      if: success()
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout main
        git merge homolog
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: test-homolog
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd /path/to/your/app
          git pull origin main
          pip install -r requirements.txt
          sudo systemctl restart myapp.service
        EOF